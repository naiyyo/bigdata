Using studentmarks.csv:


import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import confusion_matrix, accuracy_score
import seaborn as sns
import matplotlib.pyplot as plt


college = pd.read_csv("/content/studentmarks.csv")
print(college.head())
print(f"Number of rows: {len(college)}")


X = college.drop('admit', axis=1) 
y = college['admit'] 
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42)


model = LogisticRegression()
model.fit(X_train, y_train)


predict_prob = model.predict_proba(X_test)[:, 1]
predict_class = (predict_prob > 0.5).astype(int) 

print("Predicted probabilities:")
print(predict_prob)
print("Predicted classes:")
print(predict_class)


plt.figure(figsize=(15, 5))

plt.subplot(1, 3, 1)
sns.kdeplot(data=college, x='gpa', hue='admit', fill=True)
plt.title('Conditional Density Plot: GPA vs Admit')

plt.subplot(1, 3, 2)
sns.kdeplot(data=college, x='gre', hue='admit', fill=True)
plt.title('Conditional Density Plot: GRE vs Admit')

plt.subplot(1, 3, 3)
sns.kdeplot(data=college, x='rank', hue='admit', fill=True)
plt.title('Conditional Density Plot: Rank vs Admit')

plt.tight_layout()
plt.show()


conf_matrix = confusion_matrix(y_test, predict_class)
accuracy = accuracy_score(y_test, predict_class)

print("Confusion Matrix:")
print(conf_matrix)
print(f"Accuracy: {accuracy:.2f}")